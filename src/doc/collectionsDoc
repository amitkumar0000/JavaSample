A collections is group of individual object represented as single unit.

java.util.collection and java.util.map are two main root interface of java Collections Classes.

Legacy collection : Array, vector and hashTable

Collection
============
        -- List
        -- Set
            --SortedSet
        -- Queue
        -- Dequeue

Map
    -- SortedMap

Set:- Doesn't allow duplicates.Elements are unordered
        HashSet(Hashing based), LinkedHashSet, TreeSet(Balanced Tree)
        LinkedHashSet preserve the insertion order.


List:- Allow duplicates and in ordered way
        ArrayList, LinkedList, Vector , Stack
        Vector is synchronized ,
        ArrayList is not synchronized. IT can be synchronized using Collections.SynchronizedList(list)
            and CopyOnWriteArrayList()

Queue:- order elements in FIFO
        PriorityQueue

Deque:-  Allow LIFO and FIFO
         ArrayDeque,LinkedList(Deque)

Map:-   Contains key value pairs. Don't allow duplicates.
        HashMap, LinkedHashMap, HashTable,TreeMap


Iterator, Enumeration, ListIterators
=====================================
All above are used to retrieve elements from Collections.

Iterator are universal Iterator, can be used by any collections.
Enumeration only work with legacy collection(HashTable, Vector)
ListIterator is only for class that implements List interface.

Iterators only allow forward direction elements retrieval .no add, modify is allowed. Removal is allowed
With ListIterator both forward and backward direction, element retrieval is allowed. Elements can be modified, add and removed.

Collections.sort()  can only be applied to Collection Framework in which ele are stored in ordered way like all classes
implementing List, Queue, Deque.

Set Interface implemented class can't be sort via Collections.sort functionality.
If sorting is required , first convert the set into List . then do sorting.
So use TreeSet which arrange order in asc/des order. It implements SortedSet interface.


Map
    HashMap allow null as key while HashTable does not allow null as key.
    HashMap is not synchronized while hashTable is synchronized.
    TreeHashMap - implemented via Balanced binary tree
    LinkedHashMap:- Preserve the insertion order.







