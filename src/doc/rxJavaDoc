RxJava : Reactive Extension Java

Building block of RxJava
1. Observable :
        It is source of data
        It start providing data once subscriber start observing Observables.

2. Subscribers/Observers :
        listening to Observable
        If new item is emitted, onNext method is called on each subscriber
        if observable finish data flow successfully, onComplete is called on each subscriber.
        if observable finish data flow with error, onError is called on each subscriber.

set of method for modifying and composing the data.

An Observable emits data and subscriber consume data.


Different ways to create Observable Object

1. Observable observable = Observable.create(new ObservableOnSubscribe(){})
2. Observable observable = Observable.just();
2. Observable observable = Observable.fromCallable(new Callable{})

Hot and Cold Observable; connectAble Observable

Hot Observable : will emits data as available, don't wait for subscriber.
                They don't emit sequence of data again for new subscriber.


Cold Observable : will emits data if subscribe
                  if more than one subscriber than emits data one by one to all subscriber.


RxSubjects : It acts as both observables and subscriber as well.
             RxSubject are Hot Observables.

Ways to create Hot Observables
      1. Subjects :- Using Subject , we can not only convert cold observable into hot observable. but
                     can also create hot observable from scratch.
      2. ConnectAbleObservable : we can only convert cold observable into hot observable using publish and connect method.
                              and various variant like refCount, autoConnect and replay etc.

Four Variants of Subjects
1. AsyncSubjects :
                Only emits last value to its subscriber when source observable completes.
2. BehaviourSubjects :
                Only emits most recently one, if none emitting then default one and then continue the sequence until complete.
3. PublishSubjects:
                Same as BehaviourSubject expect it emit only those item which are emitted after subscription. And no default value.
4. ReplaySubjects:
                It emits all the emitted item to the subscriber regardless of when subscriber subscribes and then continue the
                sequence.

ConnectableObservable
    we use following method to convert Cold Observable to Hot Observable

    1. Publish :- It does not start emit when subscribe but when connect operator is applied.
    2. Connect :- It instruct connectable observable to begin emitting item to subscriber.
    3. Replay  :- It ensure all subscriber see the same sequence of emitted data
    4. autoconnect(num) :- It wait for num of subscriber to subscribe
    5. refCount :- it make hot observable cold until one subscriber subscribe. then hot observable.

Disadvantages of Hot Observable
1. Sources of data become unpredictable to subscriber.
        As Subject is also able to emit data. Source of data source become unpredictable.
2. Subscribers can have subscription effect based on subscription time.



